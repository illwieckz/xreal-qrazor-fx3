import os, string, sys

Import('env')

cgame_env = env.Copy()

# the file with vmMain function MUST be the first one of the list
cgame_src = [
'code/cgame/cg_main.c',
'code/game/bg_misc.c',
'code/game/bg_pmove.c',
'code/game/bg_slidemove.c',
'code/game/q_math.c',
'code/game/q_shared.c',
'code/cgame/cg_consolecmds.c',
'code/cgame/cg_draw.c',
'code/cgame/cg_drawtools.c',
'code/cgame/cg_effects.c',
'code/cgame/cg_ents.c',
'code/cgame/cg_event.c',
'code/cgame/cg_info.c',
'code/cgame/cg_localents.c',
'code/cgame/cg_marks.c',
'code/cgame/cg_players.c',
'code/cgame/cg_playerstate.c',
'code/cgame/cg_predict.c',
'code/cgame/cg_scoreboard.c',
'code/cgame/cg_servercmds.c',
'code/cgame/cg_snapshot.c',
'code/cgame/cg_view.c',
'code/cgame/cg_weapons.c'
]

if cgame_env['missionpack'] == 1:
	cgame_env.Append(CCFLAGS='-DMISSIONPACK')
	cgame_src += ['code/cgame/cg_newdraw.c', 'code/ui/ui_shared.c']

if sys.platform == 'linux2':
	cgame_src += ['code/cgame/cg_syscalls.c']
	cgame_env.SharedLibrary('cgame', cgame_src)
	cgame_env.InstallAs('#bin/base/cgamei386.so', 'libcgame.so')

elif sys.platform == 'win32':
	game_env.InstallAs('#bin/base/cgamex86.dll', 'cgame.dll')

