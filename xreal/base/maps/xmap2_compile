#!/bin/bash
case `uname -m` in
	"x86_64")
		COMPILER='../../xmap2.x86_64'
		;;
	*)
		COMPILER='../../xmap2.x86'
		;;
esac

if [ ! -f $COMPILER ]; then
        echo "`basename $COMPILER` not found!"
        echo "Did you build XreaL with scons xmap=1?"
        exit 1
fi

FS_BASEPATH='../..'
FS_GAME='base'
GAME='xreal'
COMPILE="$COMPILER -fs_basepath $FS_BASEPATH -fs_game $FS_GAME -game $GAME"
MAP="$2"

# map_ convention used to prevent possible binary name collision
map_bsp() {
	$COMPILE -v -meta -leaktest $BSPOPTS $MAP
}

map_debugportals() {
	$COMPILE -v -debugportals -meta -leaktest $MAP
}

map_debugsurfaces() {
	$COMPILE -v -debugsurfaces -meta -leaktest $MAP
}

map_fastvis() {
	$COMPILE -vis -fast $VISOPTS $MAP
}

map_vis() {
	$COMPILE -vis $VISOPTS $MAP
}

map_light() {
	$COMPILE -light -v $LIGHTOPTS $MAP 
}

map_scale() {
	$COMPILE -v -scale "$@" $MAP
}

map_package() {
	cd ..
	DATE=`date +%Y%m%d`
	MAP_STRIPPED=`basename $MAP .map`
	PK3NAME=map-$MAP_STRIPPED-$DATE.pk3
	zip $PK3NAME maps/$MAP_STRIPPED.bsp
	zip $PK3NAME maps/$MAP_STRIPPED.map
	zip $PK3NAME maps/$MAP_STRIPPED/*.hdr
	zip $PK3NAME maps/$MAP_STRIPPED/*.png
	zip $PK3NAME levelshot/$MAP_STRIPPED.png
	zip $PK3NAME scripts/$MAP_STRIPPED.arena
}

map_readbspopts() {
	if [ -r $MAP ]; then
		#grab the bspopts from the map
		BSPOPTS=`grep -A 256 "^// entity 0$" $MAP | \
		grep xmap_bspopts | \
		head -n1 | \
		sed -r 's/^"xmap_bspopts" "(.*)"$/\1/'`
		echo "BSPOPTS: $BSPOPTS"
	else
		echo "$MAP: no such map."
		exit 1
	fi
}

map_readvisopts() {
	if [ -r $MAP ]; then
		#grab the visopts from the map
		VISOPTS=`grep -A 256 "^// entity 0$" $MAP | \
		grep xmap_visopts | \
		head -n1 | \
		sed -r 's/^"xmap_visopts" "(.*)"$/\1/'`
		echo "VISOPTS: $VISOPTS"
	else
		echo "$MAP: no such map."
		exit 1
	fi
}

map_readlightopts() {
	if [ -r $MAP ]; then
		#grab the lightopts from the map
		LIGHTOPTS=`grep -A 256 "^// entity 0$" $MAP | \
		grep xmap_lightopts | \
		head -n1 | \
		sed -r 's/^"xmap_lightopts" "(.*)"$/\1/'`
		echo "LIGHTOPTS: $LIGHTOPTS"
	else
		echo "$MAP: no such map."
		exit 1
	fi
}

map_defaultcommand() {
	echo "Usage: $0 [OPTION] [FILE]"
	echo "Try \`$0 -h' for more information."
}

map_help() {
	echo "Usage: $0 [OPTION] [FILE]"
	echo "Compile a map into a BSP file and perform other functions."
	echo "Example $0 -all arena1.map"
	echo "Compile options(only one may be used):"
	echo "  -bsp            Compile the map into a basic BSP."
	echo "  -vis            Calculate VIS for an existing BSP."
	echo "  -fastvis        Same as -vis, at the cost of accuracy."
	echo "  -light          Calculate light for an existing BSP."
	echo "  -pk3            Attempt to automatically package a map project."
	echo "  -all            Short for -bsp -vis -light."
	echo "  -h              This help message."
	echo ""
	echo "This compilation script was written by Evan 'Odin' Goers, with"
	echo "help and additions from DavidSev, and Robert 'Tr3B' Beckebans."
}

case $1 in
	-bsp)
		map_readbspopts;
		map_bsp $BSPOPTS;
		;;
		
	-debugportals)
		map_debugportals;
		;;
	
	-debugsurfaces)
		map_debugsurfaces;
		;;

	-fastvis)
		map_readvisopts;
		map_fastvis $VISOPTS;
		;;
		
	-vis)
		map_readvisopts;
		map_vis $VISOPTS;
		;;

	-light)
		map_readlightopts;
		map_light $LIGHTOPTS;
		;;
		
	-pk3)
		map_package $PACKAGEOTPS;
		;;

	-all)
		map_readbspopts;
		map_bsp $BSPOPTS;
		map_readvisopts;
		map_vis $VISOPTS;
		map_readlightopts;
		map_light $LIGHTOPTS;
		;;
	-h)
		map_help;
		;;
	*)
		map_defaultcommand;
		;;
esac

