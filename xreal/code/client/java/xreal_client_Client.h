/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class xreal_client_Client */

#ifndef _Included_xreal_client_Client
#define _Included_xreal_client_Client
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     xreal_client_Client
 * Method:    getConfigString
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_xreal_client_Client_getConfigString
  (JNIEnv *, jclass, jint);

/*
 * Class:     xreal_client_Client
 * Method:    getKeyCatchers
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_xreal_client_Client_getKeyCatchers
  (JNIEnv *, jclass);

/*
 * Class:     xreal_client_Client
 * Method:    setKeyCatchers
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_xreal_client_Client_setKeyCatchers
  (JNIEnv *, jclass, jint);

/*
 * Class:     xreal_client_Client
 * Method:    getKeyBinding
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_xreal_client_Client_getKeyBinding
  (JNIEnv *, jclass, jint);

/*
 * Class:     xreal_client_Client
 * Method:    setKeyBinding
 * Signature: (ILjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_xreal_client_Client_setKeyBinding
  (JNIEnv *, jclass, jint, jstring);

/*
 * Class:     xreal_client_Client
 * Method:    isKeyDown
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_xreal_client_Client_isKeyDown
  (JNIEnv *, jclass, jint);

/*
 * Class:     xreal_client_Client
 * Method:    clearKeyStates
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_xreal_client_Client_clearKeyStates
  (JNIEnv *, jclass);

#ifdef __cplusplus
}
#endif
#endif
