code/cgame
- Tenebrae style player teleporter effect
- rotating gibs
- testOmniLight <lightShader> console command
- testProjLight <lightShader> console command
- testFlashLight <lightShader> console command
- testAnimation <animation> console command

code/game/shared
- matrix math
- quaternion math
- improved tokenizer
- handy string utilities like Q_strreplace

code/game
- experimental Lua 5.1 layer for level entity scripting allowing map designers to control entities like in Doom3

code/q3_ui
- bloom rendering game option
- anisotropic filter value slider in graphics options

code/client
- .avi video and audio recording
- .ogg Vorbis audio file format support
- libcURL http-download redirection support for fast downloads of referenced server .pk3 files

code/qcommon/cm
- optional per triangle collision detection for world surfaces

code/renderer
- OpenGL extension GL_ARB_vertex_program
- OpenGL extension GL_ARB_vertex_buffer_object
- OpenGL extension GL_ARB_shader_objects
- OpenGL extension GL_ARB_vertex_shader
- OpenGL extension GL_ARB_fragment_shader
- OpenGL extension GL_ARB_shading_language_100
- OpenGL extension GL_ARB_non_power_of_two
- OpenGL extension GL_ARB_draw_buffers
- OpenGL extension GL_ARB_texture_float
- OpenGL extension GL_ATI_seperate_stencil
- OpenGL extension GL_NV_depth_clamp
- OpenGL extension GL_SGIS_generate_mipmap
- OpenGL extension GL_EXT_texture_filter_anisotropic
- OpenGL extension GL_EXT_stencil_wrap
- OpenGL extension GL_EXT_stencil_two_side
- OpenGL extension GL_EXT_depth_bounds_test
- OpenGL extension GL_EXT_framebuffer_object
- OpenGL shader language usage in renderer backend
- anisotropic texture filtering
- hardware mipmap generation
- .png image file format support
- DirectX .dds image file format support
- skeletal animation
- Doom3 .md5mesh model file format support
- Doom3 .md5anim animation file format support
- Doom3 .mtr material shader language support
- cubemap based reflection mapping
- cubemap based reflective bump mapping (EMBM)
- cubemap based refraction mapping
- cubemap based dispersion mapping
- dynamic and static lights use Doom3 style boxed lighting attenuation
- omni-directional lighting (point lights)
- projective lighting (spot lights)
- uniform lighting and shadowing model
  dynamic lighting and shadowing on everything: world surfaces, brush model surfaces, .md3 surfaces and .md5 surfaces
  [cg/r]_shadows
  1 = blob
  2 = planar projection
  3 = stencil shadow volumes (Doom3 style)
  4 = variance shadow mapping
- usage of vertex buffer objects (VBO) to speed up rendering of large static models
- usage of frame buffer objects (FBO) to perfom offscreen rendering effects
- heat haze post process effect
  you can render many different distorsion effects with this:
  heat shimmer, water and glass
- light bloom post process effects
  cg_drawBloom cvar determines bloom mode
  0 = no bloom
  1 = simple bloom with diamond filter only
  2 = strong bloom with combined gauss and diamond filters
- rotoscope cartoon post process effect
- reactivated and extended TrueType font support using FreeType
- optional deferred shading with r_deferredShading 1

code/common/aselib
- fixed bad Doom3 paths

code/common/mathlib
- matrix math

code/common/scriplib
- improved tokenizer

code/xmap
- Doom3 .map file support Version 2
- Quake4 .map file support Version 3
- support for new entity epairs like "rotation" matrix
- Doom3 .mtr shader support
- .lwo Lightwave model support
- can be run by GtkRadiant and communicates with it using a XML based network protocol

code/gtkradiant
- lite version based on Zerowing code
- modified for XreaL mapping
- working realtime lighting preview with F3
