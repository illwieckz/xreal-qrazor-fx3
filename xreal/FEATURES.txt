code/cgame
- light bloom rendering
- new hud

code/game/shared
- matrix math
- quaternion math
- improved tokenizer

code/game
- experimental Lua 5.1 layer for level entity scripting allowing map designers to control entities like in Doom3

code/renderer
- new OpenGL extension GL_ARB_transpose_matrix
- new OpenGL extension GL_ARB_vertex_program
- new OpenGL extension GL_ARB_vertex_buffer_object
- new OpenGL extension GL_ARB_shader_objects
- new OpenGL extension GL_ARB_vertex_shader
- new OpenGL extension GL_ARB_fragment_shader
- new OpenGL extension GL_ARB_shading_language_100
- new OpenGL extension GL_EXT_texture_filter_anisotropic
- new OpenGL extension GL_EXT_stencil_wrap
- new OpenGL extension GL_EXT_stencil_two_side
- new OpenGL extension GL_EXT_depth_bounds_test
- new OpenGL extension GL_EXT_framebuffer_object
- GLSL rendering capabilities in renderer backend
- tangent space calculations for normal mapping based rendering techniques
- directional specular bump mapping
- basic .mtr shader support
- cubemap based reflection mapping
- cubemap based refraction mapping
- cubemap based dispersion mapping
- dynamic and static lights use Doom3 style boxed lighting attenuation
- heatHaze post process effect
- simple glow post process effect
- light bloom post process effects
- anisotropic texture filtering
- skeletal animation
- Doom3 .md5mesh model file format support
- Doom3 .md5anim animation file format support
- deluxe mapping: N dot L based lightmapping supported by q3map2
  compile your maps with -light -deluxe to use this feature
- added uniform lighting and shadowing model
  dynamic lighting and shadowing on everything: world surfaces, brush model surfaces, .md3 surfaces and .md5 surfaces
  [cg/r]_shadows
  1 = blob
  2 = planar projection
  3 = robust stencil shadow volumes (Doom3/Nvidia style)
- r_dynamiclight 2 skips precomputed lighting and uses pure realtime lighting and shadowing
- r_lighting cvar determines lighting mode
  0 = diffuse lighting
  1 = bump mapping
  2 = specular bump mapping
  3 = specular parallax bump mapping
- usage of vertex buffer objects to speed up rendering of large static models

code/q3_ui
- lighting mode game option
- bloom rendering game option
- anisotropic filter value slider in graphics options

code/qcommon
- optional per triangle collision detection for world surfaces

code/common/aselib
- fixed bad Doom3 paths

code/common/mathlib
- matrix math

code/common/scriplib
- improved tokenizer

code/xmap
- Doom3 .map file support Version 2
- Quake4 .map file support Version 3
- support for new entity epairs like "rotation" matrix
- basic .mtr shader support
- .lwo misc_model support
