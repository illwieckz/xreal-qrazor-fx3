import os, string, sys

Import('env')

gtkradiant_src = [
'code/gtkradiant/radiant/autosave.cpp',
'code/gtkradiant/radiant/brush.cpp',
'code/gtkradiant/radiant/brushmanip.cpp',
'code/gtkradiant/radiant/brushmodule.cpp',
'code/gtkradiant/radiant/brushnode.cpp',
'code/gtkradiant/radiant/brushtokens.cpp',
'code/gtkradiant/radiant/brushxml.cpp',
'code/gtkradiant/radiant/brush_primit.cpp',
'code/gtkradiant/radiant/build.cpp',
'code/gtkradiant/radiant/camwindow.cpp',
'code/gtkradiant/radiant/clippertool.cpp',
'code/gtkradiant/radiant/commands.cpp',
'code/gtkradiant/radiant/console.cpp',
'code/gtkradiant/radiant/csg.cpp',
'code/gtkradiant/radiant/dialog.cpp',
'code/gtkradiant/radiant/eclass.cpp',
'code/gtkradiant/radiant/eclass_def.cpp',
'code/gtkradiant/radiant/eclass_doom3.cpp',
'code/gtkradiant/radiant/eclass_fgd.cpp',
'code/gtkradiant/radiant/eclass_xml.cpp',
'code/gtkradiant/radiant/entity.cpp',
'code/gtkradiant/radiant/entityinspector.cpp',
'code/gtkradiant/radiant/entitylist.cpp',
'code/gtkradiant/radiant/environment.cpp',
'code/gtkradiant/radiant/error.cpp',
'code/gtkradiant/radiant/feedback.cpp',
'code/gtkradiant/radiant/filetypes.cpp',
'code/gtkradiant/radiant/filters.cpp',
'code/gtkradiant/radiant/findtexturedialog.cpp',
'code/gtkradiant/radiant/glwidget.cpp',
'code/gtkradiant/radiant/grid.cpp',
'code/gtkradiant/radiant/groupdialog.cpp',
'code/gtkradiant/radiant/gtkdlgs.cpp',
'code/gtkradiant/radiant/gtkmisc.cpp',
'code/gtkradiant/radiant/help.cpp',
'code/gtkradiant/radiant/image.cpp',
'code/gtkradiant/radiant/main.cpp',
'code/gtkradiant/radiant/mainframe.cpp',
'code/gtkradiant/radiant/map.cpp',
'code/gtkradiant/radiant/mru.cpp',
'code/gtkradiant/radiant/nullmodel.cpp',
'code/gtkradiant/radiant/parse.cpp',
'code/gtkradiant/radiant/patch.cpp',
'code/gtkradiant/radiant/patchdialog.cpp',
'code/gtkradiant/radiant/patchmanip.cpp',
'code/gtkradiant/radiant/patchmodule.cpp',
'code/gtkradiant/radiant/plugin.cpp',
'code/gtkradiant/radiant/pluginapi.cpp',
'code/gtkradiant/radiant/pluginmanager.cpp',
'code/gtkradiant/radiant/pluginmenu.cpp',
'code/gtkradiant/radiant/plugintoolbar.cpp',
'code/gtkradiant/radiant/points.cpp',
'code/gtkradiant/radiant/preferencedictionary.cpp',
'code/gtkradiant/radiant/preferences.cpp',
'code/gtkradiant/radiant/qe3.cpp',
'code/gtkradiant/radiant/qgl.cpp',
'code/gtkradiant/radiant/referencecache.cpp',
'code/gtkradiant/radiant/renderer.cpp',
'code/gtkradiant/radiant/renderstate.cpp',
'code/gtkradiant/radiant/scenegraph.cpp',
'code/gtkradiant/radiant/select.cpp',
'code/gtkradiant/radiant/selection.cpp',
'code/gtkradiant/radiant/server.cpp',
'code/gtkradiant/radiant/shaders.cpp',
'code/gtkradiant/radiant/sockets.cpp',
'code/gtkradiant/radiant/stacktrace.cpp',
'code/gtkradiant/radiant/surfacedialog.cpp',
'code/gtkradiant/radiant/texmanip.cpp',
'code/gtkradiant/radiant/textures.cpp',
'code/gtkradiant/radiant/texwindow.cpp',
'code/gtkradiant/radiant/timer.cpp',
'code/gtkradiant/radiant/treemodel.cpp',
'code/gtkradiant/radiant/undo.cpp',
'code/gtkradiant/radiant/url.cpp',
'code/gtkradiant/radiant/view.cpp',
'code/gtkradiant/radiant/watchbsp.cpp',
'code/gtkradiant/radiant/winding.cpp',
'code/gtkradiant/radiant/windowobservers.cpp',
'code/gtkradiant/radiant/xmlstuff.cpp',
'code/gtkradiant/radiant/xywindow.cpp'
]

gtkutil_src = [
'code/gtkradiant/libs/gtkutil/accelerator.cpp',
'code/gtkradiant/libs/gtkutil/button.cpp',
'code/gtkradiant/libs/gtkutil/clipboard.cpp',
'code/gtkradiant/libs/gtkutil/closure.cpp',
'code/gtkradiant/libs/gtkutil/container.cpp',
'code/gtkradiant/libs/gtkutil/cursor.cpp',
'code/gtkradiant/libs/gtkutil/dialog.cpp',
'code/gtkradiant/libs/gtkutil/entry.cpp',
'code/gtkradiant/libs/gtkutil/filechooser.cpp',
'code/gtkradiant/libs/gtkutil/frame.cpp',
'code/gtkradiant/libs/gtkutil/glfont.cpp',
'code/gtkradiant/libs/gtkutil/glwidget.cpp',
'code/gtkradiant/libs/gtkutil/idledraw.cpp',
'code/gtkradiant/libs/gtkutil/image.cpp',
'code/gtkradiant/libs/gtkutil/menu.cpp',
'code/gtkradiant/libs/gtkutil/messagebox.cpp',
'code/gtkradiant/libs/gtkutil/nonmodal.cpp',
'code/gtkradiant/libs/gtkutil/paned.cpp',
'code/gtkradiant/libs/gtkutil/pointer.cpp',
'code/gtkradiant/libs/gtkutil/toolbar.cpp',
'code/gtkradiant/libs/gtkutil/widget.cpp',
'code/gtkradiant/libs/gtkutil/window.cpp',
'code/gtkradiant/libs/gtkutil/xorrectangle.cpp'
]

profile_src = [
'code/gtkradiant/libs/profile/file.cpp',
'code/gtkradiant/libs/profile/profile.cpp'
]

cmdlib_src = [
'code/gtkradiant/libs/cmdlib/cmdlib.cpp'
]

l_net_src = [
'code/gtkradiant/libs/l_net/l_net.c'
]

archivezip_src = [
'code/gtkradiant/plugins/archivezip/plugin.cpp',
'code/gtkradiant/plugins/archivezip/archive.cpp',
'code/gtkradiant/plugins/archivezip/pkzip.cpp',
'code/gtkradiant/plugins/archivezip/zlibstream.cpp'
]

entity_src = [
'code/gtkradiant/plugins/entity/plugin.cpp',
'code/gtkradiant/plugins/entity/entity.cpp',
'code/gtkradiant/plugins/entity/eclassmodel.cpp',
'code/gtkradiant/plugins/entity/generic.cpp',
'code/gtkradiant/plugins/entity/group.cpp',
'code/gtkradiant/plugins/entity/light.cpp',
'code/gtkradiant/plugins/entity/miscmodel.cpp',
'code/gtkradiant/plugins/entity/doom3group.cpp',
'code/gtkradiant/plugins/entity/skincache.cpp',
'code/gtkradiant/plugins/entity/angle.cpp',
'code/gtkradiant/plugins/entity/angles.cpp',
'code/gtkradiant/plugins/entity/colour.cpp',
'code/gtkradiant/plugins/entity/filters.cpp',
'code/gtkradiant/plugins/entity/model.cpp',
'code/gtkradiant/plugins/entity/namedentity.cpp',
'code/gtkradiant/plugins/entity/origin.cpp',
'code/gtkradiant/plugins/entity/scale.cpp',
'code/gtkradiant/plugins/entity/targetable.cpp',
'code/gtkradiant/plugins/entity/rotation.cpp',
'code/gtkradiant/plugins/entity/modelskinkey.cpp'
]

image_src = [
'code/gtkradiant/libs/ddslib/ddslib.c',
'code/gtkradiant/plugins/image/bmp.cpp',
'code/gtkradiant/plugins/image/image.cpp',
'code/gtkradiant/plugins/image/pcx.cpp',
'code/gtkradiant/plugins/image/tga.cpp',
'code/gtkradiant/plugins/image/dds.cpp'
]

imagejpeg_src = [
'code/gtkradiant/plugins/imagejpeg/plugin.cpp',
'code/jpeg-6/jcapimin.c',
'code/jpeg-6/jchuff.c',
'code/jpeg-6/jcinit.c',
'code/jpeg-6/jccoefct.c',
'code/jpeg-6/jccolor.c',
'code/jpeg-6/jfdctflt.c',
'code/jpeg-6/jcdctmgr.c',
'code/jpeg-6/jcphuff.c',
'code/jpeg-6/jcmainct.c',
'code/jpeg-6/jcmarker.c',
'code/jpeg-6/jcmaster.c',
'code/jpeg-6/jcomapi.c',
'code/jpeg-6/jcparam.c',
'code/jpeg-6/jcprepct.c',
'code/jpeg-6/jcsample.c',
'code/jpeg-6/jdapimin.c',
'code/jpeg-6/jdapistd.c',
'code/jpeg-6/jdatasrc.c',
'code/jpeg-6/jdcoefct.c',
'code/jpeg-6/jdcolor.c',
'code/jpeg-6/jddctmgr.c',
'code/jpeg-6/jdhuff.c',
'code/jpeg-6/jdinput.c',
'code/jpeg-6/jdmainct.c',
'code/jpeg-6/jdmarker.c',
'code/jpeg-6/jdmaster.c',
'code/jpeg-6/jdpostct.c',
'code/jpeg-6/jdsample.c',
'code/jpeg-6/jdtrans.c',
'code/jpeg-6/jerror.c',
'code/jpeg-6/jidctflt.c',
'code/jpeg-6/jmemmgr.c',
'code/jpeg-6/jmemansi.c',
'code/jpeg-6/jutils.c'
]

imagepng_src = [
'code/gtkradiant/plugins/imagepng/plugin.cpp',
'code/png/png.c',
'code/png/pngset.c',
'code/png/pngget.c',
'code/png/pngrutil.c',
'code/png/pngtrans.c',
'code/png/pngwutil.c',
'code/png/pngread.c',
'code/png/pngrio.c',
'code/png/pngwio.c',
'code/png/pngwrite.c',
'code/png/pngrtran.c',
'code/png/pngwtran.c',
'code/png/pngmem.c',
'code/png/pngerror.c',
'code/png/pngpread.c',
'code/zlib/adler32.c',
'code/zlib/compress.c',
'code/zlib/crc32.c',
'code/zlib/gzio.c',
'code/zlib/uncompr.c',
'code/zlib/deflate.c',
'code/zlib/trees.c',
'code/zlib/zutil.c',
'code/zlib/inflate.c',
'code/zlib/infback.c',
'code/zlib/inftrees.c',
'code/zlib/inffast.c'
]

mapq3_src = [
'code/gtkradiant/plugins/mapq3/plugin.cpp',
'code/gtkradiant/plugins/mapq3/parse.cpp',
'code/gtkradiant/plugins/mapq3/write.cpp'
]

mapxml_src = [
'code/gtkradiant/plugins/mapxml/plugin.cpp',
'code/gtkradiant/plugins/mapxml/xmlparse.cpp',
'code/gtkradiant/plugins/mapxml/xmlwrite.cpp'
]

model_src = [
#'code/gtkradiant/libs/mathlib/mathlib.c',
#'code/gtkradiant/libs/mathlib/bbox.c',
#'code/gtkradiant/libs/mathlib/line.c',
#'code/gtkradiant/libs/mathlib/m4x4.c',
#'code/gtkradiant/libs/mathlib/ray.c',
'code/gtkradiant/libs/picomodel/picointernal.c',
'code/gtkradiant/libs/picomodel/picomodel.c',
'code/gtkradiant/libs/picomodel/picomodules.c',
'code/gtkradiant/libs/picomodel/pm_3ds.c',
'code/gtkradiant/libs/picomodel/pm_ase.c',
'code/gtkradiant/libs/picomodel/pm_md3.c',
'code/gtkradiant/libs/picomodel/pm_obj.c',
'code/gtkradiant/libs/picomodel/pm_ms3d.c',
'code/gtkradiant/libs/picomodel/pm_mdc.c',
'code/gtkradiant/libs/picomodel/pm_fm.c',
'code/gtkradiant/libs/picomodel/pm_md2.c',
'code/gtkradiant/libs/picomodel/pm_lwo.c',
'code/gtkradiant/libs/picomodel/pm_terrain.c',
'code/gtkradiant/libs/picomodel/lwo/clip.c',
'code/gtkradiant/libs/picomodel/lwo/envelope.c',
'code/gtkradiant/libs/picomodel/lwo/list.c',
'code/gtkradiant/libs/picomodel/lwo/lwio.c',
'code/gtkradiant/libs/picomodel/lwo/lwo2.c',
'code/gtkradiant/libs/picomodel/lwo/lwob.c',
'code/gtkradiant/libs/picomodel/lwo/pntspols.c',
'code/gtkradiant/libs/picomodel/lwo/surface.c',
'code/gtkradiant/libs/picomodel/lwo/vecmath.c',
'code/gtkradiant/libs/picomodel/lwo/vmap.c',
'code/gtkradiant/plugins/model/plugin.cpp',
'code/gtkradiant/plugins/model/model.cpp'
]

shaders_src = [
'code/gtkradiant/plugins/shaders/plugin.cpp',
'code/gtkradiant/plugins/shaders/shaders.cpp'
]

vfsq3_src = [
'code/gtkradiant/plugins/vfspk3/vfspk3.cpp',
'code/gtkradiant/plugins/vfspk3/vfs.cpp',
'code/gtkradiant/plugins/vfspk3/archive.cpp'
]

xml_src = [
'code/gtkradiant/libs/xml/ixml.cpp',
'code/gtkradiant/libs/xml/xmlparser.cpp',
'code/gtkradiant/libs/xml/xmlwriter.cpp',
'code/gtkradiant/libs/xml/xmlelement.cpp',
'code/gtkradiant/libs/xml/xmltextags.cpp'
]

brushexport_src = [
'code/gtkradiant/plugins/brushexport/plugin.cpp',
'code/gtkradiant/plugins/brushexport/interface.cpp',
'code/gtkradiant/plugins/brushexport/callbacks.cpp',
'code/gtkradiant/plugins/brushexport/support.cpp',
'code/gtkradiant/plugins/brushexport/export.cpp'
]


gtkradiant_env = env.Copy()
gtkradiant_env.Append(CCFLAGS='-W -Wall -Wcast-align -Wcast-qual -Wno-unused-parameter -Wno-non-virtual-dtor -Wreorder -fno-exceptions -fno-rtti')
gtkradiant_env.Append(CCFLAGS='-Icode/gtkradiant/include')
gtkradiant_env.Append(CCFLAGS='-Icode/gtkradiant/libs')

module_env = env.Copy()
module_env.Append(CXXFLAGS='-Wno-non-virtual-dtor -fno-exceptions -fno-rtti')
module_env.Append(CCFLAGS='-Icode/gtkradiant/include')
module_env.Append(CCFLAGS='-Icode/gtkradiant/libs')

if env['arch'] == 'linux-i386' or env['arch'] == 'linux-x86_64':
	l_net_src += ['code/gtkradiant/libs/l_net/l_net_berkley.c']
	
	gtkradiant_env.Append(CCFLAGS='-DPOSIX -DXWINDOWS')
	gtkradiant_env.ParseConfig('pkg-config gtk+-2.0 --cflags --libs')
	gtkradiant_env.ParseConfig('pkg-config gtkglext-1.0 --cflags --libs')
	gtkradiant_env.ParseConfig('pkg-config libxml-2.0 --cflags --libs')
	
	if env['arch'] == 'linux-i386':
		gtkradiant_env.Program('gtkradiant', [gtkradiant_src, gtkutil_src, profile_src, cmdlib_src, l_net_src, xml_src])
		gtkradiant_env.InstallAs('#gtkradiant/gtkradiant.x86', 'gtkradiant')
	elif env['arch'] == 'linux-x86_64':
		gtkradiant_env.Program('gtkradiant', [gtkradiant_src, gtkutil_src, profile_src, cmdlib_src, l_net_src, xml_src])
		gtkradiant_env.InstallAs('#gtkradiant/gtkradiant.x86_64', 'gtkradiant')
		
	module_env.Append(CCFLAGS='-DPOSIX')
	
	archivezip_env = module_env.Copy()
	archivezip_env.SharedLibrary('archivezip', archivezip_src, LIBS=['z'])
	archivezip_env.InstallAs('#gtkradiant/modules/archivezip.so', 'libarchivezip.so')
	
	entity_env = module_env.Copy()
	entity_env.SharedLibrary('entity', entity_src)
	entity_env.InstallAs('#gtkradiant/modules/entityq3.so', 'libentity.so')
	
	image_env = module_env.Copy()
	image_env.SharedLibrary('image', image_src)
	image_env.InstallAs('#gtkradiant/modules/imageq3.so', 'libimage.so')
	
	imagejpeg_env = module_env.Copy()
	imagejpeg_env.Append(CCFLAGS='-DRADIANT')
	imagejpeg_env.SharedLibrary('imagejpeg', imagejpeg_src)
	imagejpeg_env.InstallAs('#gtkradiant/modules/imagejpeg.so', 'libimagejpeg.so')
	
	imagepng_env = module_env.Copy()
	imagepng_env.Append(CCFLAGS='-DPNG_NO_ASSEMBLER_CODE')
	imagepng_env.SharedLibrary('imagepng', imagepng_src)
	imagepng_env.InstallAs('#gtkradiant/modules/imagepng.so', 'libimagepng.so')
	
	mapq3_env = module_env.Copy()
	mapq3_env.SharedLibrary('mapq3', mapq3_src)
	mapq3_env.InstallAs('#gtkradiant/modules/mapq3.so', 'libmapq3.so')
	
	model_env = module_env.Copy()
	model_env.SharedLibrary('model', model_src)
	model_env.InstallAs('#gtkradiant/modules/modelpico.so', 'libmodel.so')
	
	shaders_env = module_env.Copy()
	shaders_env.ParseConfig('pkg-config glib-2.0 --cflags --libs')
	shaders_env.SharedLibrary('shaders', shaders_src)
	shaders_env.InstallAs('#gtkradiant/modules/shadersq3.so', 'libshaders.so')
	
	vfsq3_env = module_env.Copy()
	vfsq3_env.ParseConfig('pkg-config glib-2.0 --cflags --libs')
	vfsq3_env.SharedLibrary('vfsq3', vfsq3_src)
	vfsq3_env.InstallAs('#gtkradiant/modules/vfsq3.so', 'libvfsq3.so')
	
	brushexport_env = module_env.Copy()
	brushexport_env.ParseConfig('pkg-config glib-2.0 --cflags --libs')
	brushexport_env.ParseConfig('pkg-config gtk+-2.0 --cflags --libs')
	brushexport_env.SharedLibrary('brushexport', brushexport_src)
	brushexport_env.InstallAs('#gtkradiant/modules/brushexport.so', 'libbrushexport.so')
	
	
if env['arch'] == 'win32-mingw':
	l_net_src += ['code/gtkradiant/libs/l_net/l_net_wins.c']
	gtkradiant_src += ['code/gtkradiant/radiant/multimon.cpp']
	
	gtkradiant_env.ParseConfig('pkg-config gtk+-2.0 --cflags --libs')
	gtkradiant_env.ParseConfig('pkg-config gtkglext-1.0 --cflags --libs')
	gtkradiant_env.ParseConfig('pkg-config libxml-2.0 --cflags --libs')
	gtkradiant_env.Append(LIBS=['wsock32']) 
	gtkradiant_env.Program('gtkradiant', [gtkradiant_src, gtkutil_src, profile_src, cmdlib_src, l_net_src, xml_src])
	gtkradiant_env.Install('#gtkradiant', 'gtkradiant.exe')
	
	archivezip_env = module_env.Copy()
	archivezip_env.ParseConfig('pkg-config libxml-2.0 --cflags --libs')
	archivezip_env.SharedLibrary('archivezip', archivezip_src, LIBS=['z'])
	archivezip_env.InstallAs('#gtkradiant/modules/archivezip.dll', 'archivezip.dll')
	
	entity_env = module_env.Copy()
	entity_env.SharedLibrary('entity', entity_src)
	entity_env.InstallAs('#gtkradiant/modules/entity.dll', 'entity.dll')
	
	image_env = module_env.Copy()
	image_env.SharedLibrary('image', image_src)
	image_env.InstallAs('#gtkradiant/modules/image.dll', 'image.dll')
	
	imagejpeg_env = module_env.Copy()
	imagejpeg_env.Append(CCFLAGS='-DRADIANT')
	imagejpeg_env.SharedLibrary('imagejpeg', imagejpeg_src)
	imagejpeg_env.InstallAs('#gtkradiant/modules/imagejpeg.dll', 'imagejpeg.dll')
	
	imagepng_env = module_env.Copy()
	imagepng_env.SharedLibrary('imagepng', imagepng_src)
	imagepng_env.InstallAs('#gtkradiant/modules/imagepng.dll', 'imagepng.dll')
	
	mapq3_env = module_env.Copy()
	mapq3_env.SharedLibrary('mapq3', mapq3_src)
	mapq3_env.InstallAs('#gtkradiant/modules/mapq3.dll', 'mapq3.dll')
	
	model_env = module_env.Copy()
	model_env.SharedLibrary('model', model_src)
	model_env.InstallAs('#gtkradiant/modules/model.dll', 'model.dll')
	
	shaders_env = module_env.Copy()
	shaders_env.ParseConfig('pkg-config glib-2.0 --cflags --libs')
	shaders_env.SharedLibrary('shaders', shaders_src)
	shaders_env.InstallAs('#gtkradiant/modules/shaders.dll', 'shaders.dll')
	
	vfspk3_env = module_env.Copy()
	vfspk3_env.ParseConfig('pkg-config glib-2.0 --cflags --libs')
	vfspk3_env.SharedLibrary('vfspk3', vfspk3_src)
	vfspk3_env.InstallAs('#gtkradiant/modules/vfspk3.dll', 'vfspk3.dll')
