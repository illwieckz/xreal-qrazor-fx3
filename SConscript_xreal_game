import os, string, sys

Import('env')

xreal_game_src = [
'src/x_endian.cxx',
'src/x_info.cxx',
'src/x_math.cxx',
'src/x_panim.cxx',
'src/x_protocol.cxx',
'src/x_shared.cxx',
'src/x_string.cxx',
'src/ode/array.cxx',
'src/ode/collision_kernel.cxx',
'src/ode/collision_quadtreespace.cxx',
'src/ode/collision_space.cxx',
'src/ode/collision_std.cxx',
'src/ode/collision_transform.cxx',
'src/ode/collision_util.cxx',
'src/ode/error.cxx',
'src/ode/fast_dot.cxx',
'src/ode/fast_ldlt.cxx',
'src/ode/fast_lsolve.cxx',
'src/ode/fast_ltsolve.cxx',
'src/ode/joint.cxx',
'src/ode/lcp.cxx',
'src/ode/mass.cxx',
'src/ode/mat.cxx',
'src/ode/matrix.cxx',
'src/ode/memory.cxx',
'src/ode/misc.cxx',
'src/ode/obstack.cxx',
'src/ode/ode.cxx',
'src/ode/odemath.cxx',
'src/ode/rotation.cxx',
'src/ode/step.cxx',
'src/ode/step_quick.cxx',
'src/ode/testing.cxx',
'src/ode/timer.cxx',
'src/ode/util.cxx',
'src/xreal/bg_physics.cxx',
'src/xreal/bg_pmove.cxx',
'src/xreal/g_coldet.cxx',
'src/xreal/g_combat.cxx',
'src/xreal/g_debris.cxx',
'src/xreal/g_entity.cxx',
'src/xreal/g_field.cxx',
'src/xreal/g_func.cxx',
'src/xreal/g_hud.cxx',
'src/xreal/g_item.cxx',
'src/xreal/g_light.cxx',
'src/xreal/g_main.cxx',
'src/xreal/g_misc.cxx',
'src/xreal/g_physics.cxx',
'src/xreal/g_player.cxx',
'src/xreal/g_projectile.cxx',
'src/xreal/g_pweapon.cxx',
'src/xreal/g_spawn.cxx',
'src/xreal/g_svcmds.cxx',
'src/xreal/g_syscalls.cxx',
'src/xreal/g_target.cxx',
'src/xreal/g_trigger.cxx',
'src/xreal/g_utils.cxx',
'src/xreal/g_weapon.cxx',
'src/xreal/g_world.cxx' ]

xreal_game_env = env.Copy()
xreal_game_env.SharedLibrary('game', xreal_game_src, LIBS=['m'])

if sys.platform == 'linux2':
	xreal_game_env.InstallAs('#install/xreal/game.so', 'libgame.so')

elif sys.platform == 'win32':
	xreal_game_env.InstallAs('#install/xreal/game.dll', 'libgame.dll')

