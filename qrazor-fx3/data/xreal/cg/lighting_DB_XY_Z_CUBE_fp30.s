!!FP1.0
# NV_fragment_program generated by NVIDIA Cg compiler
# cgc version 1.2.1001, build date Mar 17 2004  10:58:07
# command line args: -profile fp30
#vendor NVIDIA Corporation
#version 1.0.02
#profile fp30
#program main
#semantic main.diffusemap
#semantic main.bumpmap
#semantic main.attenuationmap_xy
#semantic main.attenuationmap_z
#semantic main.attenuationmap_cube
#semantic main.light_origin
#semantic main.light_color
#semantic main.bump_scale
#var sampler2D diffusemap :  : texunit 0 : 1 : 1
#var sampler2D bumpmap :  : texunit 1 : 2 : 1
#var sampler2D attenuationmap_xy :  : texunit 2 : 3 : 1
#var sampler2D attenuationmap_z :  : texunit 3 : 4 : 1
#var samplerCUBE attenuationmap_cube :  : texunit 4 : 5 : 1
#var float3 light_origin :  :  : 6 : 1
#var float3 light_color :  :  : 7 : 1
#var float bump_scale :  :  : 8 : 1
#var float4 IN.position : $vin.TEXCOORD0 : TEX0 : 0 : 1
#var float4 IN.tex_diffuse : $vin.TEXCOORD1 : TEX1 : 0 : 1
#var float4 IN.tex_bump : $vin.TEXCOORD2 : TEX2 : 0 : 1
#var float4 IN.tex_atten_xy_z : $vin.TEXCOORD3 : TEX3 : 0 : 1
#var float4 IN.tex_atten_cube : $vin.TEXCOORD4 : TEX4 : 0 : 1
#var float3 IN.tangent : $vin.TEXCOORD5 : TEX5 : 0 : 1
#var float3 IN.binormal : $vin.TEXCOORD6 : TEX6 : 0 : 1
#var float3 IN.normal : $vin.TEXCOORD7 : TEX7 : 0 : 1
#var half4 main.color : $vout.COLOR : COL : -1 : 1
DECLARE light_origin;
DECLARE light_color;
DECLARE bump_scale;
TEX R0.xyz, f[TEX2].xyxx, TEX1, 2D;
TEX R1, f[TEX1].xyxx, TEX0, 2D;
ADDR R0.xyz, R0.xyzx, -{0.5}.x;
MULR R0.xyz, R0.xyzx, {2}.x;
MOVR H0.xy, R0.xyxx;
MULR R0.x, R0.z, bump_scale.x;
MOVH H0.z, R0.x;
DP3H H0.w, H0.xyzx, H0.xyzx;
RSQH H0.w, H0.w;
MULH H0.xyz, H0.w, H0.xyzx;
MOVR H1.w, R1.w;
ADDR R0.xyz, light_origin.xyzx, -f[TEX0].xyzx;
DP3R R0.w, f[TEX5].xyzx, R0.xyzx;
MOVR R2.x, R0.w;
DP3R R0.w, f[TEX6].xyzx, R0.xyzx;
MOVR R2.y, R0.w;
DP3R R0.x, f[TEX7].xyzx, R0.xyzx;
MOVR R2.z, R0.x;
DP3R R0.x, R2.xyzx, R2.xyzx;
RSQR R0.x, R0.x;
MULR R2.xyz, R0.x, R2.xyzx;
DP3X_SAT H0.x, H0.xyzx, R2.xyzx;
MULR R0.xyz, light_color.xyzx, H0.x;
MULR R0.xyz, R1.xyzx, R0.xyzx;
MOVX H1.xyz, R0.xyzx;
MOVX H0.w, H1.w;
MOVR R0.x, f[TEX3].z;
MOVR R0.y, {0, 0}.y;
TEX R0.xyz, R0.xyxx, TEX3, 2D;
TEX R1.xyz, f[TEX3].xyxx, TEX2, 2D;
MULH H1.xyz, H1.xyzx, R1.xyzx;
MOVH H0.xyz, H1.xyzx;
MULH H1.xyz, H0.xyzx, R0.xyzx;
MOVH H0.xyz, H1.xyzx;
MOVH H1.w, H0.w;
TEX R0.xyz, f[TEX4].xyzx, TEX4, CUBE;
MULH H0.xyz, H0.xyzx, R0.xyzx;
MOVH H1.xyz, H0.xyzx;
MOVH o[COLH], H1;
END
# 39 instructions, 3 R-regs, 2 H-regs.
# End of program
