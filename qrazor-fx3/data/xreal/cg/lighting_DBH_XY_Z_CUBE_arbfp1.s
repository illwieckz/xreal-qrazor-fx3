!!ARBfp1.0
# ARB_fragment_program generated by NVIDIA Cg compiler
# cgc version 1.2.1001, build date Mar 17 2004  10:58:07
# command line args: -profile arbfp1
#vendor NVIDIA Corporation
#version 1.0.02
#profile arbfp1
#program main
#semantic main.diffusemap
#semantic main.bumpmap
#semantic main.heightmap
#semantic main.attenuationmap_xy
#semantic main.attenuationmap_z
#semantic main.attenuationmap_cube
#semantic main.view_origin
#semantic main.light_origin
#semantic main.light_color
#semantic main.bump_scale
#semantic main.height_scale
#semantic main.height_bias
#var sampler2D diffusemap :  : texunit 0 : 1 : 1
#var sampler2D bumpmap :  : texunit 1 : 2 : 1
#var sampler2D heightmap :  : texunit 2 : 3 : 1
#var sampler2D attenuationmap_xy :  : texunit 3 : 4 : 1
#var sampler2D attenuationmap_z :  : texunit 4 : 5 : 1
#var samplerCUBE attenuationmap_cube :  : texunit 5 : 6 : 1
#var float3 view_origin :  : c[2] : 7 : 1
#var float3 light_origin :  : c[5] : 8 : 1
#var float3 light_color :  : c[3] : 9 : 1
#var float bump_scale :  : c[4] : 10 : 1
#var float height_scale :  : c[0] : 11 : 1
#var float height_bias :  : c[1] : 12 : 1
#var float4 IN.position : $vin.TEXCOORD0 : TEX0 : 0 : 1
#var float4 IN.tex_diffuse_bump : $vin.TEXCOORD1 : TEX1 : 0 : 1
#var float4 IN.tex_height : $vin.TEXCOORD2 : TEX2 : 0 : 1
#var float4 IN.tex_atten_xy_z : $vin.TEXCOORD3 : TEX3 : 0 : 1
#var float4 IN.tex_atten_cube : $vin.TEXCOORD4 : TEX4 : 0 : 1
#var float3 IN.tangent : $vin.TEXCOORD5 : TEX5 : 0 : 1
#var float3 IN.binormal : $vin.TEXCOORD6 : TEX6 : 0 : 1
#var float3 IN.normal : $vin.TEXCOORD7 : TEX7 : 0 : 1
#var float4 main.color : $vout.COLOR : COL : -1 : 1
PARAM u2 = program.local[2];
PARAM u5 = program.local[5];
PARAM u3 = program.local[3];
PARAM u4 = program.local[4];
PARAM u0 = program.local[0];
PARAM u1 = program.local[1];
PARAM c0 = {2, 0.5, 0, 0};
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEX R0.x, fragment.texcoord[2], texture[2], 2D;
TEX R1.xyz, fragment.texcoord[3], texture[3], 2D;
ADD R2.xyz, u2, -fragment.texcoord[0];
DP3 R2.w, fragment.texcoord[5], R2;
MOV R3.x, R2.w;
DP3 R2.w, fragment.texcoord[6], R2;
MOV R3.y, R2.w;
DP3 R2.x, fragment.texcoord[7], R2;
MOV R3.z, R2.x;
DP3 R2.x, R3, R3;
RSQ R2.x, R2.x;
MUL R3.xy, R2.x, R3;
MOV R2.x, u1.x;
MAD R2.x, R0.x, u0.x, R2.x;
MAD R0.xy, R2.x, R3, fragment.texcoord[1].zwzz;
MAD R3.xy, R2.x, R3, fragment.texcoord[1];
TEX R0.xyz, R0, texture[1], 2D;
TEX R2, R3, texture[0], 2D;
ADD R0.xyz, R0, -c0.y;
MUL R0.xyz, R0, c0.x;
ADD R3.xyz, u5, -fragment.texcoord[0];
DP3 R0.w, fragment.texcoord[5], R3;
MOV R4.x, R0.w;
DP3 R0.w, fragment.texcoord[6], R3;
MOV R4.y, R0.w;
DP3 R0.w, fragment.texcoord[7], R3;
MOV R4.z, R0.w;
MOV R3.xy, R0;
MUL R0.x, R0.z, u4.x;
MOV R3.z, R0.x;
DP3 R0.x, R3, R3;
RSQ R0.x, R0.x;
MUL R3.xyz, R0.x, R3;
DP3 R0.x, R4, R4;
RSQ R0.x, R0.x;
MUL R4.xyz, R0.x, R4;
DP3_SAT R0.x, R3, R4;
MUL R0.xyz, u3, R0.x;
MUL R0.xyz, R2, R0;
MOV R2.xyz, R0;
MUL R0.xyz, R2, R1;
MOV R1.x, fragment.texcoord[3].z;
MOV R1.y, c0.w;
TEX R1.xyz, R1, texture[4], 2D;
TEX R3.xyz, fragment.texcoord[4], texture[5], CUBE;
MOV R2.xyz, R0;
MUL R0.xyz, R2, R1;
MOV R2.xyz, R0;
MUL R0.xyz, R2, R3;
MOV R2.xyz, R0;
MOV result.color, R2;
END
# 51 instructions, 5 R-regs, 0 H-regs.
# End of program
