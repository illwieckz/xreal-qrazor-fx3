!!ARBfp1.0
# ARB_fragment_program generated by NVIDIA Cg compiler
# cgc version 1.2.1001, build date Mar 17 2004  10:58:07
# command line args: -profile arbfp1
#vendor NVIDIA Corporation
#version 1.0.02
#profile arbfp1
#program main
#semantic main.colormap
#semantic main.view_origin
#semantic main.eta_ratio
#semantic main.fresnel_power
#semantic main.fresnel_scale
#semantic main.fresnel_bias
#var samplerCUBE colormap :  : texunit 0 : 1 : 1
#var float3 view_origin :  : c[3] : 2 : 1
#var float3 eta_ratio :  : c[4] : 3 : 1
#var float fresnel_power :  : c[2] : 4 : 1
#var float fresnel_scale :  : c[0] : 5 : 1
#var float fresnel_bias :  : c[1] : 6 : 1
#var float4 IN.position : $vin.TEXCOORD0 : TEX0 : 0 : 1
#var float3 IN.normal : $vin.TEXCOORD1 : TEX1 : 0 : 1
#var float4 main.color : $vout.COLOR : COL : -1 : 1
PARAM u3 = program.local[3];
PARAM u4 = program.local[4];
PARAM u2 = program.local[2];
PARAM u0 = program.local[0];
PARAM u1 = program.local[1];
PARAM c0 = {1, 2, 0, 0};
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
TEMP H0;
ADD R0.xyz, fragment.texcoord[0], -u3;
DP3 R0.w, R0, R0;
RSQ R0.w, R0.w;
DP3 R1.x, fragment.texcoord[1], fragment.texcoord[1];
RSQ R1.x, R1.x;
MUL R1.xyz, R1.x, fragment.texcoord[1];
MUL R2.xyz, R0.w, R0;
DP3 R1.w, -R2, R1;
MAD R2.w, -R1.w, R1.w, c0.x;
DP3 R3.x, -R2, R1;
MUL R3.y, u4.x, u4.x;
MAD R2.w, -R3.y, R2.w, c0.x;
MAD R3.y, -R3.x, R3.x, c0.x;
DP3 R3.z, -R2, R1;
MUL R3.w, u4.y, u4.y;
MAD R3.y, -R3.w, R3.y, c0.x;
MAD R3.w, -R3.z, R3.z, c0.x;
ABS R4.x, R2.w;
RSQ R4.x, R4.x;
RCP R4.x, R4.x;
MUL R4.x, c0.x, R4.x;
MAD R4.x, u4.x, R1.w, -R4.x;
MUL R4.xyz, R4.x, R1;
ADD R2.w, c0.z, -R2.w;
CMP H0.x, R2.w, c0.x, c0.z;
MAD R4.xyz, u4.x, R2, R4;
MUL R4.xyz, R4, H0.x;
TEX R4.x, R4, texture[0], CUBE;
MUL R1.w, u4.z, u4.z;
MAD R3.w, -R1.w, R3.w, c0.x;
ABS R1.w, R3.y;
RSQ R1.w, R1.w;
RCP R1.w, R1.w;
MUL R1.w, c0.x, R1.w;
MAD R1.w, u4.y, R3.x, -R1.w;
MUL R5.xyz, R1.w, R1;
ADD R3.y, c0.z, -R3.y;
CMP H0.x, R3.y, c0.x, c0.z;
MAD R5.xyz, u4.y, R2, R5;
MUL R5.xyz, R5, H0.x;
TEX R5.y, R5, texture[0], CUBE;
MOV R4.y, R5.y;
ABS R1.w, R3.w;
RSQ R1.w, R1.w;
RCP R1.w, R1.w;
MUL R1.w, c0.x, R1.w;
MAD R1.w, u4.z, R3.z, -R1.w;
MUL R3.xyz, R1.w, R1;
ADD R3.w, c0.z, -R3.w;
CMP H0.x, R3.w, c0.x, c0.z;
MAD R3.xyz, u4.z, R2, R3;
MUL R3.xyz, R3, H0.x;
TEX R3.z, R3, texture[0], CUBE;
MOV R4.z, R3.z;
DP3 R1.w, R1, R2;
DP3 R2.x, R2, R1;
MUL R1.xyz, c0.y, R1;
MUL R1.xyz, R1, R1.w;
MAD R1.xyz, R0.w, R0, -R1;
ADD R2.x, c0.x, -R2.x;
POW R2.x, R2.x, u2.x;
TEX R0.xyz, R1, texture[0], CUBE;
ADD R0.xyz, R0, -R4;
MOV R0.w, u1.x;
MAD R0.w, R2.x, u0.x, R0.w;
MAD R4.xyz, R0.w, R0, R4;
MOV result.color.xyz, R4;
MOV result.color.w, c0.x;
END
# 68 instructions, 6 R-regs, 1 H-regs.
# End of program
