!!ARBfp1.0
# ARB_fragment_program generated by NVIDIA Cg compiler
# cgc version 1.2.1001, build date Mar 17 2004  10:58:07
# command line args: -profile arbfp1
#vendor NVIDIA Corporation
#version 1.0.02
#profile arbfp1
#program main
#semantic main.diffusemap
#semantic main.bumpmap
#semantic main.heightmap
#semantic main.specularmap
#semantic main.lightmap
#semantic main.deluxemap
#semantic main.view_origin
#semantic main.bump_scale
#semantic main.height_scale
#semantic main.height_bias
#semantic main.specular_exponent
#var sampler2D diffusemap :  : texunit 0 : 1 : 1
#var sampler2D bumpmap :  : texunit 1 : 2 : 1
#var sampler2D heightmap :  : texunit 2 : 3 : 1
#var sampler2D specularmap :  : texunit 3 : 4 : 1
#var sampler2D lightmap :  : texunit 4 : 5 : 1
#var sampler2D deluxemap :  : texunit 5 : 6 : 1
#var float3 view_origin :  : c[2] : 7 : 1
#var float bump_scale :  : c[4] : 8 : 1
#var float height_scale :  : c[0] : 9 : 1
#var float height_bias :  : c[1] : 10 : 1
#var float specular_exponent :  : c[3] : 11 : 1
#var float4 IN.position : $vin.TEXCOORD0 : TEX0 : 0 : 1
#var float4 IN.tex_diffuse_bump : $vin.TEXCOORD1 : TEX1 : 0 : 1
#var float4 IN.tex_height : $vin.TEXCOORD2 : TEX2 : 0 : 1
#var float4 IN.tex_specular : $vin.TEXCOORD3 : TEX3 : 0 : 1
#var float4 IN.tex_light_deluxe : $vin.TEXCOORD4 : TEX4 : 0 : 1
#var float3 IN.tangent : $vin.TEXCOORD5 : TEX5 : 0 : 1
#var float3 IN.binormal : $vin.TEXCOORD6 : TEX6 : 0 : 1
#var float3 IN.normal : $vin.TEXCOORD7 : TEX7 : 0 : 1
#var float4 main.color : $vout.COLOR : COL : -1 : 1
PARAM u2 = program.local[2];
PARAM u4 = program.local[4];
PARAM u0 = program.local[0];
PARAM u1 = program.local[1];
PARAM u3 = program.local[3];
PARAM c0 = {2, 0.5, 0, 0};
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
TEX R0.xyz, fragment.texcoord[4].zwzz, texture[5], 2D;
TEX R1.x, fragment.texcoord[2], texture[2], 2D;
ADD R0.xyz, R0, -c0.y;
MUL R0.xyz, R0, c0.x;
ADD R2.xyz, u2, -fragment.texcoord[0];
DP3 R0.w, fragment.texcoord[5], R2;
MOV R3.x, R0.w;
DP3 R0.w, fragment.texcoord[6], R2;
MOV R3.y, R0.w;
DP3 R0.w, fragment.texcoord[7], R2;
MOV R3.z, R0.w;
DP3 R0.w, R3, R3;
RSQ R0.w, R0.w;
MUL R3.xyz, R0.w, R3;
MOV R0.w, u1.x;
MAD R0.w, R1.x, u0.x, R0.w;
MAD R1.xy, R0.w, R3, fragment.texcoord[1].zwzz;
TEX R1.xyz, R1, texture[1], 2D;
TEX R2.xyz, fragment.texcoord[4], texture[4], 2D;
ADD R1.xyz, R1, -c0.y;
MUL R1.xyz, R1, c0.x;
DP3 R1.w, fragment.texcoord[5], R0;
MOV R4.x, R1.w;
DP3 R1.w, fragment.texcoord[6], R0;
MOV R4.y, R1.w;
DP3 R0.x, fragment.texcoord[7], R0;
MOV R4.z, R0.x;
MOV R0.xy, R1;
MUL R1.x, R1.z, u4.x;
MOV R0.z, R1.x;
DP3 R1.x, R4, R4;
RSQ R1.x, R1.x;
DP3 R1.y, R0, R0;
RSQ R1.y, R1.y;
MUL R0.xyz, R1.y, R0;
MAD R5.xyz, R1.x, R4, R3;
MUL R4.xyz, R1.x, R4;
DP3_SAT R1.x, R0, R4;
MUL R1.xyz, R2, R1.x;
DP3 R1.w, R5, R5;
RSQ R1.w, R1.w;
MUL R5.xyz, R1.w, R5;
DP3_SAT R0.x, R0, R5;
POW R0.x, R0.x, u3.x;
MAD R4.xy, R0.w, R3, fragment.texcoord[1];
MAD R3.xy, R0.w, R3, fragment.texcoord[3];
TEX R4, R4, texture[0], 2D;
TEX R3.xyz, R3, texture[3], 2D;
MUL R2.xyz, R3, R2;
MUL R1.xyz, R4, R1;
MOV R4.xyz, R1;
MAD R0.xyz, R2, R0.x, R4;
MOV R4.xyz, R0;
MOV result.color, R4;
END
# 54 instructions, 6 R-regs, 0 H-regs.
# End of program
