!!FP1.0
# NV_fragment_program generated by NVIDIA Cg compiler
# cgc version 1.2.1001, build date Mar 17 2004  10:58:07
# command line args: -profile fp30
#vendor NVIDIA Corporation
#version 1.0.02
#profile fp30
#program main
#semantic main.diffusemap
#semantic main.attenuationmap_xy
#semantic main.attenuationmap_z
#semantic main.attenuationmap_cube
#semantic main.light_origin
#semantic main.light_color
#var sampler2D diffusemap :  : texunit 0 : 1 : 1
#var sampler2D attenuationmap_xy :  : texunit 1 : 2 : 1
#var sampler2D attenuationmap_z :  : texunit 2 : 3 : 1
#var samplerCUBE attenuationmap_cube :  : texunit 3 : 4 : 1
#var float3 light_origin :  :  : 5 : 1
#var float3 light_color :  :  : 6 : 1
#var float4 IN.position : $vin.TEXCOORD0 : TEX0 : 0 : 1
#var float3 IN.normal : $vin.TEXCOORD1 : TEX1 : 0 : 1
#var float4 IN.tex_diffuse : $vin.TEXCOORD2 : TEX2 : 0 : 1
#var float4 IN.tex_atten_xy_z : $vin.TEXCOORD3 : TEX3 : 0 : 1
#var float4 IN.tex_atten_cube : $vin.TEXCOORD4 : TEX4 : 0 : 1
#var half4 main.color : $vout.COLOR : COL : -1 : 1
DECLARE light_origin;
DECLARE light_color;
TEX R0, f[TEX2].xyxx, TEX0, 2D;
TEX R1.xyz, f[TEX3].xyxx, TEX1, 2D;
MOVR H0.w, R0.w;
ADDR R2.xyz, light_origin.xyzx, -f[TEX0].xyzx;
DP3R R2.w, R2.xyzx, R2.xyzx;
RSQR R2.w, R2.w;
MULR R2.xyz, R2.w, R2.xyzx;
DP3R R2.w, f[TEX1].xyzx, f[TEX1].xyzx;
RSQR R2.w, R2.w;
MULR R3.xyz, R2.w, f[TEX1].xyzx;
DP3X_SAT H1.x, R3.xyzx, R2.xyzx;
MULR R2.xyz, light_color.xyzx, H1.x;
MULR R2.xyz, R0.xyzx, R2.xyzx;
MOVX H0.xyz, R2.xyzx;
MULH H1.xyz, H0.xyzx, R1.xyzx;
MOVH H0.xyz, H1.xyzx;
MOVH H1.w, H0.w;
MOVR R0.x, f[TEX3].z;
MOVR R0.y, {0, 0}.y;
TEX R0.xyz, R0.xyxx, TEX2, 2D;
TEX R1.xyz, f[TEX4].xyzx, TEX3, CUBE;
MULH H0.xyz, H0.xyzx, R0.xyzx;
MOVH H1.xyz, H0.xyzx;
MULH H0.xyz, H1.xyzx, R1.xyzx;
MOVH H1.xyz, H0.xyzx;
MOVH o[COLH], H1;
END
# 26 instructions, 4 R-regs, 2 H-regs.
# End of program
