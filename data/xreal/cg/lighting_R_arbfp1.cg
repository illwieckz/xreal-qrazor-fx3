/// ============================================================================
/*
Copyright (C) 2004 Robert Beckebans <trebor_7@users.sourceforge.net>
Please see the file "AUTHORS" for a list of contributors

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  

See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
*/
/// ============================================================================

#include "utils.cg"

struct cg_vertex2fragment
{
	float3 normal		: TEXCOORD0;
	float4 tex_diffuse	: TEXCOORD1;
	float4 tex_light	: TEXCOORD2;
	float4 tex_deluxe	: TEXCOORD3;
};

struct cg_fragment2final
{
	float4 color		: COLOR;
};


cg_fragment2final main(in	cg_vertex2fragment IN,
				uniform sampler2D diffusemap,
				uniform sampler2D lightmap,
				uniform sampler2D deluxemap)
{
	cg_fragment2final OUT;
	
	// compute normal
	float3 N = normalize(IN.normal);
	
	// compute light direction from object space deluxe map
	float3 L = normalize(CG_Expand(tex2D(deluxemap, IN.tex_deluxe.xy).xyz));
	
	// compute light color from object space lightmap
	float3 C = tex2D(lightmap, IN.tex_light.xy).xyz;
	
	// compute the diffuse term
	float4 diffuse = tex2D(diffusemap, IN.tex_diffuse.xy);
	diffuse.rgb *= C * saturate(dot(N, L));
	
	// compute final color
	OUT.color.rgba = diffuse;
    
	return OUT;
}
